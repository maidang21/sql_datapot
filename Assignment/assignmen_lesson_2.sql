--CORRECT HOMEWORK LESSON 2

/* Task 1: Retrieve data for transportation reports 
1.1 Retrieve a list of cities: Initially, you need to produce a list of all of you customers' locations. 
Write a Transact-SQL query that queries the SalesLT.Address table and retrieves the values for City and StateProvince, removing duplicates , 
then sorts in ascending order of StateProvince and descending order of City. */
 
SELECT DISTINCT 
     StateProvince
    , City
FROM
    SalesLT.Address
ORDER BY StateProvince ASC , City DESC;

/* 1.2 Retrieve the heaviest products information 
Transportation costs are increasing and you need to identify the heaviest products. 
Retrieve the names, weight of the top ten percent of products by weight.  
Then, add new column named Number of sell days (caculated from SellStartDate and SellEndDate)
 of these products (if sell end date isn't defined then get Today date)  */

-- SELECT TOP N PECENT : lấy theo tỷ lệ %
SELECT TOP 10 PERCENT  
    Name 
    ProductID
    , Name 
    , Weight 
    , SellStartDate
    , SellEndDate
    , CURRENT_TIMESTAMP
    , CASE 
        WHEN SellEndDate IS NULL THEN DATEDIFF(day, SellStartDate, CURRENT_TIMESTAMP)
        ELSE DATEDIFF(day, SellStartDate, SellEndDate)
        END AS number_of_sell_days
FROM 
    SalesLT.Product
ORDER BY Weight DESC;

/* Task 2: Retrieve product data 
2.1 Filter products by color and size  
Retrieve the product number and name of the products that have a color of black, red, or white and a size of S or M */
SELECT 
    ProductID
    , Name 
    , ProductNumber
    , Color
    , Size
FROM 
    SalesLT.Product
WHERE 
    Color IN ('Black', 'Red', 'White')
    AND Size IN ('S','M')

/*2.2 Filter products by color, size and product number 
Retrieve the ProductID, ProductNumber and Name of the products, 
- that must have Product number begins with 'BK-' followed by any character other than 'T' and ends with a '-' followed by any two numerals.  
- And satisfy one of the following conditions: color of black, red, or white size is S or M and */

-- way 1
SELECT
    ProductID
    , ProductNumber
    , Color
    , [Size]
    , Name
FROM 
    SalesLT.Product
WHERE
    ProductNumber LIKE 'BK-%'
    AND ProductNumber NOT LIKE '___T%'
    AND ProductNumber LIKE '%-[0-9][0-9]'
    AND (Color IN ('Black', 'Red', 'White')
        OR Size IN ('S','M'))

-- way 2
SELECT    
    ProductID
    , ProductNumber
    , Color
    , [Size]
    , Name
FROM SalesLT.Product
WHERE
    ProductNumber  LIKE 'BK-[^T]%-[0-9][0-9]'
    AND ( Color IN ('Black', 'Red', 'White')
        OR Size IN ('S','M'))

-- Dynamic for N digits
SELECT    
    ProductID
    , ProductNumber
    , Color
    , [Size]
    , Name
    , 'BK-[^T]%-' + REPLICATE('[0-9]', 2) AS new_string
    , 'BK-[^T]%-' + REPLICATE('[0-9]', LEN(ProductNumber)) AS new_string_1
FROM SalesLT.Product
WHERE ProductNumber LIKE 'BK-[^R]%-' + REPLICATE('[0-9]', LEN(ProductNumber))
-- 

/*2.3 Retrieve specific products by product ID  
Retrieve the product ID, product number, name, and list price of products whose 
- product name contains "HL " or "Mountain",
- product number is at least 8 characters 
- and never have been ordered. */

SELECT 
    ProductID
    , ProductNumber
    , Name
    , ListPrice 
FROM SalesLT.Product 
WHERE (Name LIKE '%HL %' OR Name LIKE '%Mountain%')
    AND LEN(ProductNumber) >= 8 
    AND ProductID NOT IN (SELECT 
                            DISTINCT ProductID 
                            FROM SalesLT.SalesOrderDetail)

-- Never have been ordered: Tức những ProductID có trong bảng Product nhưng không xuất hiện trong bảng SalesOrderDetail

-- SELECT TOP 10 * FROM SalesLT.SalesOrderDetail
SELECT DISTINCT ProductID FROM SalesLT.SalesOrderDetail -- 142  productID
SELECT DISTINCT ProductID FROM SalesLT.Product -- 295 productID
        

/*2.4 Retrieve specific products by product name  
Retrieve the product ID, product number and 2 new columns:   
ProductName is generated by the string preceded by the '-' character (example: HL Road Frame)  
GroupSize follows conditions:   
- Size is 'S' or less than 43 --> 'small'  
- Size is 'M' or 'L' or from 43 to 57 --> 'medium'  
- Size is 'XL' or larger than 57 --> 'big'  
- NULL --> 'no size'  */

SELECT
    ProductID
    , ProductNumber
    , Name
    , Size
    , CHARINDEX ('-',Name) AS char_index
    ,   CASE 
            WHEN CHARINDEX('-', Name) = 0 THEN Name
            ELSE LEFT(Name, CHARINDEX('-', Name) - 1)
        END AS ProductName
    , CASE  
        WHEN Size = 'S' Then 'Small' 
        WHEN Size < '43' Then 'Small' 
        WHEN Size IN ('M', 'L') Then 'Medium' 
        WHEN Size BETWEEN '43' and '57' Then 'Medium' 
        WHEN Size = 'XL' Then 'Big' 
        WHEN Size > '57' Then 'Big' 
        Else 'No Size' 
    END AS group_size
FROM  SalesLT.Product


/*2.5 From table SalesLT.Customer 
Get name of each sale man. Name is last part of SalesPerson. 
Example: adventure-works\jun0 -> Name = jun0 
(2 ways) */

--Cách 1

SELECT
    SalesPerson
    , CHARINDEX('\', SalesPerson) AS position
    , SUBSTRING(SalesPerson, CHARINDEX('\', SalesPerson) +1, LEN(SalesPerson))  AS sale_person_name
FROM 
    SalesLT.Customer

--Cách 2
SELECT
    SalesPerson 
    , REPLACE(SalesPerson, 'adventure-works\', '') AS sale_person_name
FROM 
    SalesLT.Customer


-- Cách khác:
SELECT 
    SalesPerson
    , CHARINDEX('\', SalesPerson)
    , SUBSTRING(SalesPerson, CHARINDEX('\', SalesPerson) +1, 1000) AS Name_1
    , SUBSTRING(SalesPerson, CHARINDEX('\', SalesPerson) +1, LEN(SalesPerson) - (CHARINDEX('\', SalesPerson))) AS Name_2
    , REPLACE(SalesPerson, 'adventure-works\', '') AS Name_3
    , RIGHT(SalesPerson, LEN(SalesPerson) - CHARINDEX('\', SalesPerson)) AS Name_4
FROM SalesLT.Customer